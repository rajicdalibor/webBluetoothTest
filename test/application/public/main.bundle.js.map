{"version":3,"sources":["C:/Users/Dalibor/Desktop/application/source/src/$_lazy_route_resource lazy","C:/Users/Dalibor/Desktop/application/source/src/app/app.component.css","C:/Users/Dalibor/Desktop/application/source/src/app/app.component.html","C:/Users/Dalibor/Desktop/application/source/src/app/app.component.ts","C:/Users/Dalibor/Desktop/application/source/src/app/app.module.ts","C:/Users/Dalibor/Desktop/application/source/src/app/dialog/track-dialog/track-dialog.component.css","C:/Users/Dalibor/Desktop/application/source/src/app/dialog/track-dialog/track-dialog.component.html","C:/Users/Dalibor/Desktop/application/source/src/app/dialog/track-dialog/track-dialog.component.ts","C:/Users/Dalibor/Desktop/application/source/src/app/dialog/user-dialog/user-dialog.component.css","C:/Users/Dalibor/Desktop/application/source/src/app/dialog/user-dialog/user-dialog.component.html","C:/Users/Dalibor/Desktop/application/source/src/app/dialog/user-dialog/user-dialog.component.ts","C:/Users/Dalibor/Desktop/application/source/src/app/pipes/truncate.pipe.ts","C:/Users/Dalibor/Desktop/application/source/src/app/services/search.service.ts","C:/Users/Dalibor/Desktop/application/source/src/app/services/settings.service.ts","C:/Users/Dalibor/Desktop/application/source/src/environments/environment.ts","C:/Users/Dalibor/Desktop/application/source/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Dalibor/Desktop/application/source/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Dalibor/Desktop/application/source/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"fw\\\">\\n\\n    <!--Toolbar-->\\n    <mat-toolbar class=\\\"toolbar\\\">\\n      <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" class=\\\"colorWhite\\\" fxLayoutAlign=\\\"start center\\\">\\n        <div fxFlex=\\\"30\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <div>\\n            <img class=\\\"logo\\\" src=\\\"../assets/logo.png\\\">\\n          </div>\\n          <div class=\\\"logoStyle\\\">\\n            MusicBOX\\n          </div>\\n        </div>\\n        <div fxFlex=\\\"70\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n          <div *ngIf=\\\"searchTab\\\" class=\\\"mr5\\\" style=\\\"border-bottom: solid white\\\">\\n            <img class=\\\"logo\\\" src=\\\"../assets/ic_search_white_36px.svg\\\">\\n          </div>\\n          <div class=\\\"clickable mr5\\\" *ngIf=\\\"!searchTab\\\" (click)=\\\"searchTabActive()\\\">\\n            <img class=\\\"logo\\\" src=\\\"../assets/ic_search_white_36px.svg\\\">\\n          </div>\\n          <div *ngIf=\\\"settingsTab\\\" class=\\\"mr5\\\" style=\\\"border-bottom: solid white\\\">\\n            <img class=\\\"logo\\\" src=\\\"../assets/ic_settings_white_36px.svg\\\">\\n          </div>\\n          <div class=\\\"clickable mr5\\\" *ngIf=\\\"!settingsTab\\\" (click)=\\\"settingsTabActive()\\\">\\n            <img class=\\\"logo\\\" src=\\\"../assets/ic_settings_white_36px.svg\\\">\\n          </div>\\n          <div class=\\\"clickable\\\">\\n            <img (click)=\\\"openUserDialog()\\\" class=\\\"logo\\\" src=\\\"../assets/ic_account_circle_white_36px.svg\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </mat-toolbar>\\n  </div>\\n\\n  <!--Main container-->\\n  <div class=\\\"container\\\">\\n    <div fxLayoutAlign=\\\"center center\\\">\\n      <div fxFlex=\\\"95\\\" fxFlex.gt-sm=\\\"50\\\">\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" *ngIf=\\\"searchTab\\\">\\n          <div fxFlex=\\\"100\\\" class=\\\"title taCenter\\\">\\n            SEARCH FOR YOUR FAVORITE ARTIST\\n          </div>\\n          <form class=\\\"example-form\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center end\\\">\\n\\n            <mat-form-field class=\\\"box-search m40\\\">\\n              <input matInput #message maxlength=\\\"256\\\" placeholder=\\\"Artist\\\" [(ngModel)]=\\\"artistForSearch\\\"\\n                     name=\\\"artistForSearch\\\" style=\\\"font-family: 'Roboto'\\\">\\n              <mat-hint align=\\\"start\\\" style=\\\"font-family: 'Roboto'\\\"><strong>First or last name of artist</strong>\\n              </mat-hint>\\n            </mat-form-field>\\n            <button mat-raised-button mat-primary\\n                    style=\\\"height: 40px; margin-bottom: 20px; margin-left: 10px; font-family: 'Roboto'\\\"\\n                    (click)=\\\"search()\\\" [disabled]=\\\"!artistForSearch\\\">SEARCH\\n            </button>\\n          </form>\\n          <div fxLayoutAlign=\\\"start center\\\" class=\\\"box-search\\\" fxLayout=\\\"row\\\">\\n            Searched:&nbsp;\\n            <div *ngFor=\\\"let artist of searchHistory\\\">\\n              {{artist}}&nbsp;\\n            </div>\\n\\n          </div>\\n          <div id=\\\"searchResults\\\" class=\\\"fw\\\">\\n          <div fxLayoutAlign=\\\"start center\\\" class=\\\"box-search dark m40\\\" *ngIf=\\\"activeSearchedArtist.length > 0\\\">\\n            <div class=\\\"pl5lr5\\\">\\n              Search results\\n            </div>\\n          </div>\\n          </div>\\n          <div class=\\\"box-search\\\">\\n            <div *ngFor=\\\"let artist of activeSearchedArtist | limitTo : 10\\\" fxLayoutAlign=\\\"start center\\\"\\n                 class=\\\"artists onHover\\\">\\n              <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" (click)=\\\"artistDetails(artist)\\\" class=\\\"clickable\\\">\\n                <div fxFlex=\\\"50\\\" class=\\\"pl5lr5\\\" style=\\\"height: 50px; padding-top: 15px\\\">\\n                  {{artist.name}}\\n                </div>\\n                <div fxFlex=\\\"50\\\" fxLayoutAlign=\\\"end center\\\">\\n                  <div *ngIf=\\\"artist.images.length > 0\\\" class=\\\"pl5lr5\\\">\\n                    <img class=\\\"img\\\" src={{artist.images[0].url}}>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div id=\\\"artistDetails\\\" class=\\\"fw\\\">\\n          <div *ngIf=\\\"selectedArtist\\\" class=\\\"box-search m40 pt10pb10\\\" fxLayoutAlign=\\\"start center\\\">\\n            <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\">\\n              <h1 fxFlex=\\\"50\\\">\\n                {{selectedArtist.name}}\\n              </h1>\\n              <div *ngIf=\\\"selectedArtist.images.length > 0\\\" fxFlex=\\\"50\\\" fxLayoutAlign=\\\"end center\\\">\\n                <img class=\\\"img-large\\\" src={{selectedArtist.images[0].url}}>\\n              </div>\\n            </div>\\n          </div>\\n          </div>\\n          <div fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" class=\\\"fw\\\">\\n            <div fxLayoutAlign=\\\"start center\\\" fxLayout=\\\"row\\\" class=\\\"dark\\\" *ngIf=\\\"selectedArtist\\\">\\n              <h2 fxFlex=\\\"50\\\" class=\\\"pl5lr5\\\">\\n                Albums\\n              </h2>\\n              <div fxFlex=\\\"50\\\" fxLayoutAlign=\\\"end center\\\" style=\\\"margin-right: 3%\\\">\\n                <h4 *ngIf=\\\"selectedArtist\\\" class=\\\"clickable\\\" (click)=\\\"artistDetails(selectedArtist, true)\\\">NEXT</h4>\\n              </div>\\n            </div>\\n            <div *ngFor=\\\"let album of artistAlbums\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"albums\\\">\\n              <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" (click)=\\\"openAlbum(album)\\\" class=\\\"clickable onHoverUnderline\\\">\\n                <div fxFlex=\\\"100\\\" class=\\\"pl5lr5\\\">\\n                  {{album.name}}\\n                </div>\\n              </div>\\n            </div>\\n            <div id=\\\"albumDetails\\\">\\n            <div class=\\\"box-search m40 fw\\\" fxLayoutAlign=\\\"center center\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\"\\n                 *ngIf=\\\"selectedAlbum && selectedAlbum.images.length > 0\\\">\\n              <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\">\\n                <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start start\\\">\\n                  <div fxFlex=\\\"50\\\" fxLayoutAlign=\\\"start start\\\" fxLayout=\\\"column\\\" class=\\\"fw\\\">\\n                    <h2 class=\\\"fw\\\">{{selectedAlbum.name}}</h2>\\n                    <h4 class=\\\"fw mb0 p5 dark\\\">Authors:</h4>\\n                    <mat-list *ngFor=\\\"let artist of selectedAlbum.artists\\\" fxLayoutAlign=\\\"start center\\\">\\n                      <mat-list-item fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" (click)=\\\"newArtist(artist.id)\\\"\\n                                     class=\\\"clickable onHoverUnderline\\\">\\n                        <div fxFlex=\\\"50\\\">\\n                          {{artist.name}}\\n                        </div>\\n                      </mat-list-item>\\n                    </mat-list>\\n                  </div>\\n                  <div fxFlex=\\\"50\\\" fxLayoutAlign=\\\"end center\\\">\\n                    <img class=\\\"img-album\\\" src={{selectedAlbum.images[0].url}}>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            </div>\\n            <div fxLayoutAlign=\\\"start start\\\" fxFlex=\\\"100\\\" class=\\\"m40\\\" *ngIf=\\\"selectedAlbum\\\" fxLayout=\\\"column\\\">\\n              <div fxLayoutAlign=\\\"start center\\\" fxLayout=\\\"row\\\" class=\\\"dark fw\\\">\\n                <h2 fxFlex=\\\"50\\\" class=\\\"pl5lr5\\\">\\n                  Tracks\\n                </h2>\\n              </div>\\n              <div *ngFor=\\\"let track of selectedAlbum.tracks.items\\\" fxLayoutAlign=\\\"start start\\\">\\n                <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start start\\\" class=\\\"clickable onHoverUnderline\\\">\\n                  <h4 class=\\\"mb0 pb0 pl20\\\" fxFlex=\\\"100\\\" (click)=\\\"trackDialog(track)\\\">\\n                    {{track.name}}\\n                  </h4>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <!--Settings page-->\\n        <div fxLayoutAlign=\\\"center center\\\" *ngIf=\\\"settingsTab\\\">\\n          <div fxFlex=\\\"95\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" class=\\\"taCenter\\\">\\n            <h1 class=\\\"title taCenter\\\">APPLICATION SETTINGS</h1>\\n            <div>\\n              <h3 class=\\\"dark p10\\\">Visible recently viewed albums:&nbsp;{{visibleAlbums}}</h3>\\n              <mat-slider min=\\\"3\\\" max={{albumsToStore}} step=\\\"1\\\" [(ngModel)]=\\\"visibleAlbums\\\"\\n                          (ngModelChange)=\\\"updateSavedAlbums()\\\" class=\\\"fw\\\"></mat-slider>\\n            </div>\\n            <div>\\n              <h3 class=\\\"dark p10\\\">Stored recently viewed albums:&nbsp;{{albumsToStore}}</h3>\\n              <mat-slider min={{visibleAlbums}} max=\\\"8\\\" step=\\\"1\\\" [(ngModel)]=\\\"albumsToStore\\\"\\n                          (ngModelChange)=\\\"updateSavedAlbums()\\\" class=\\\"fw\\\"></mat-slider>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n<!--Footer-->\\n  <footer class=\\\"footer\\\" fxLayoutAlign=\\\"center center\\\" *ngIf=\\\"searchTab\\\">\\n    <div fxFlex=\\\"95\\\" fxFlex.gt-sm=\\\"50\\\" style=\\\"border-top: 2px solid lightgray\\\" fxLayout=\\\"column\\\"\\n         fxLayoutAlign=\\\"start start\\\">\\n      <h4 class=\\\"mb0 pb0\\\">Recently Viewed:</h4>\\n      <div fxLayoutAlign=\\\"start center\\\" fxFlex=\\\"100\\\" class=\\\"fw mb0 pb0\\\">\\n        <div fxFlex=\\\"100\\\" fxLayout=\\\"row\\\" fxLayoutWrap fxLayoutAlign=\\\"start center\\\" class=\\\"tracks\\\"\\n             *ngFor=\\\"let album of storedAlbumsToView\\\">\\n          <div fxFlex class=\\\"clickable\\\" (click)=\\\"openAlbum(album)\\\">\\n            <div class=\\\"image-container\\\">\\n              <img class=\\\"image\\\" src={{album.images[0].url}}>\\n              <div class=\\\"middle\\\">\\n                <div class=\\\"text\\\">{{album.name}}</div>\\n\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </footer>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Dalibor/Desktop/application/source/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {UserDialogComponent} from './dialog/user-dialog/user-dialog.component';\nimport {TrackDialogComponent} from './dialog/track-dialog/track-dialog.component';\nimport {SearchService} from \"./services/search.service\";\nimport {SettingsService} from \"./services/settings.service\";\nimport {MatDialog} from '@angular/material';\nimport {MatSnackBar} from '@angular/material';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  token:string;\n  refreshToken:string;\n  artistForSearch:string;\n  searchHistory:any;\n  savedAlbums:any;\n  visibleAlbums:any;\n  albumsToStore:any;\n  activeSearchedArtist:any;\n  selectedArtist:any;\n  artistAlbums:any;\n  nextAlbums:any;\n  selectedAlbum:any;\n  storedAlbumsToView:any;\n  userData:any;\n  searchTab:boolean;\n  settingsTab:boolean;\n  initialTokenRequest:boolean;\n\n  constructor(private http:HttpClient, private searchService:SearchService,\n              private settingsService:SettingsService,\n              public dialog:MatDialog,\n              public snackBar:MatSnackBar) {\n    this.savedAlbums = [];\n    this.searchTab = true;\n    this.settingsTab = false;\n    this.visibleAlbums = 5;\n    this.albumsToStore = 5;\n    this.activeSearchedArtist = [];\n    this.searchHistory = [];\n    this.nextAlbums = false;\n    this.initialTokenRequest = true;\n\n    // Subscribe to various subjects\n    this.searchService.snackBarSubject.subscribe((message)=> {\n      this.openSnackBar(message);\n    });\n    this.searchService.searchedArtists.subscribe((artists)=> {\n      this.activeSearchedArtist = artists.items;\n      this.animateScroll('searchResults');\n    });\n    this.searchService.selectedArtist.subscribe((artist)=> {\n      this.selectedArtist = artist;\n      this.animateScroll('artistDetails');\n    });\n    this.searchService.artistAlbums.subscribe((albums)=> {\n      this.artistAlbums = albums;\n    });\n    this.searchService.selectedAlbum.subscribe((album)=> {\n      this.selectedAlbum = album;\n      this.settingsService.updateSavedAlbums(this.albumsToStore, this.selectedAlbum);\n      this.animateScroll('albumDetails');\n    });\n    this.searchService.userData.subscribe((user)=> {\n      this.userData = user;\n    });\n    this.settingsService.albumsToView.subscribe((albums)=> {\n      this.savedAlbums = albums;\n      this.storedAlbumsToView = this.savedAlbums.slice(0, this.visibleAlbums);\n    });\n  }\n\n  ngOnInit() {\n    // Initial read albums from local storage\n    this.settingsService.readSavedAlbums(this.albumsToStore);\n    this.getToken();\n  }\n\n  // Requesting token from backend\n  getToken() {\n    let url = '/token?initial=' + this.initialTokenRequest;\n    this.http.get(url)\n      .subscribe((res) => {\n        try {\n          if (res['token'] != this.token) {\n            this.token = res['token'];\n            if (this.initialTokenRequest) {\n              this.searchService.readUserDetails(this.token);\n            } else {\n              this.openSnackBar('Token updated');\n            }\n          }\n          this.initialTokenRequest = false;\n          this.getToken();\n        } catch (e) {\n          console.error(e);\n        }\n      }, (error) => {\n        this.initialTokenRequest = false;\n        this.openSnackBar('Unable to get token');\n        console.warn(\"Unable to get token\");\n      });\n  }\n\n  initValues() {\n    this.activeSearchedArtist = [];\n    this.selectedArtist = undefined;\n    this.artistAlbums = undefined;\n    this.nextAlbums = undefined;\n    this.selectedAlbum = undefined;\n  }\n\n  // Searching for artists\n  search() {\n    this.initValues();\n    this.searchHistory.unshift(this.artistForSearch);\n    if (this.searchHistory.length > 5) {\n      this.searchHistory.pop();\n    }\n    this.searchService.searchForArtist(this.token, this.artistForSearch);\n  }\n\n  // Open artist details\n  artistDetails(artist, next) {\n    this.searchService.openArtist(this.token, artist, next);\n  }\n\n  // Open artist from list of album\n  newArtist(id) {\n    this.searchService.newArtist(this.token, id);\n  }\n\n  // Open album details\n  openAlbum(album) {\n    this.searchService.openAlbum(this.token, album);\n  }\n\n  // Updating recently viewed data\n  updateSavedAlbums(album?) {\n    this.settingsService.updateSavedAlbums(this.albumsToStore, album);\n  }\n\n  // User dialog\n  openUserDialog():void {\n    let dialogRef = this.dialog.open(UserDialogComponent, {\n      width: '350px',\n      data: {token: this.token, userData: this.userData}\n    });\n  }\n\n  // Track dialog\n  trackDialog(track):void {\n    let dialogRef = this.dialog.open(TrackDialogComponent, {\n      width: '350px',\n      data: {track: track, token: this.token}\n    });\n  }\n\n  // Switching between tabs\n  searchTabActive() {\n    this.searchTab = true;\n    this.settingsTab = false;\n  };\n\n  settingsTabActive() {\n    this.searchTab = false;\n    this.settingsTab = true;\n  };\n\n  // Snack bar function\n  openSnackBar(message) {\n    this.snackBar.open(message, null, {\n      duration: 2000,\n    });\n  }\n\n  // Functions for scroll animation\n  animateScroll(element) {\n    let target = document.getElementById(element);\n    this.animate(document.scrollingElement || document.documentElement, \"scrollTop\", \"\", window.pageYOffset, target.offsetTop, 500, true);\n  }\n\n  animate(elem, style, unit, from, to, time, prop) {\n    if (!elem) {\n      return;\n    }\n    let start = new Date().getTime(),\n      timer = setInterval(function () {\n        let step = Math.min(1, (new Date().getTime() - start) / time);\n        if (prop) {\n          elem[style] = (from + step * (to - from)) + unit;\n        } else {\n          elem.style[style] = (from + step * (to - from)) + unit;\n        }\n        if (step === 1) {\n          clearInterval(timer);\n        }\n      }, 25);\n    if (prop) {\n      elem[style] = from + unit;\n    } else {\n      elem.style[style] = from + unit;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Dalibor/Desktop/application/source/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SearchService } from './services/search.service';\nimport { SettingsService } from './services/settings.service';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TrackDialogComponent } from './dialog/track-dialog/track-dialog.component';\nimport { UserDialogComponent } from './dialog/user-dialog/user-dialog.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { TruncatePipe } from './pipes/truncate.pipe';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport 'hammerjs';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TruncatePipe,\n    TrackDialogComponent,\n    UserDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FormsModule,\n    FlexLayoutModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatTabsModule,\n    MatDialogModule,\n    MatSliderModule,\n    MatListModule,\n    MatSnackBarModule\n  ],\n  exports:[],\n  providers: [ SearchService, SettingsService ],\n  entryComponents: [UserDialogComponent, TrackDialogComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Dalibor/Desktop/application/source/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Dalibor/Desktop/application/source/src/app/dialog/track-dialog/track-dialog.component.css\n// module id = ../../../../../src/app/dialog/track-dialog/track-dialog.component.css\n// module chunks = main","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" style=\\\"width: 100%\\\">\\n  <mat-toolbar style=\\\"background-color: white\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" fxLayout=\\\"column\\\">\\n      <h2>Track details</h2>\\n    </div>\\n  </mat-toolbar>\\n  <mat-list fxFlex=\\\"100\\\">\\n    <mat-list-item>\\n      Name:&nbsp;{{name}}\\n    </mat-list-item>\\n    <mat-list-item>\\n      Album:&nbsp;{{album}}\\n    </mat-list-item>\\n    <mat-list-item>\\n      Disc number:&nbsp;{{discNumber}}\\n    </mat-list-item>\\n    <mat-list-item>\\n      Track number:&nbsp;{{trackNumber}}\\n    </mat-list-item>\\n    <mat-list-item>\\n      Popularity:&nbsp;{{popularity}}\\n    </mat-list-item>\\n    <mat-list-item>\\n      Duration:&nbsp;{{duration}}\\n    </mat-list-item>\\n  </mat-list>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Dalibor/Desktop/application/source/src/app/dialog/track-dialog/track-dialog.component.html\n// module id = ../../../../../src/app/dialog/track-dialog/track-dialog.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-track-dialog',\n  templateUrl: './track-dialog.component.html',\n  styleUrls: ['./track-dialog.component.css']\n})\nexport class TrackDialogComponent implements OnInit {\n  token: any;\n  album: any;\n  name: any;\n  duration: any;\n  discNumber: any;\n  trackNumber: any;\n  popularity: any;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private http: HttpClient) { }\n\n  ngOnInit() {\n    let track = this.data.track;\n    this.token = this.data['token'];\n    this.openTrack(track['id']);\n  }\n  \n  // Get track details from track id\n  openTrack(id){\n    this.http.get('https://api.spotify.com/v1/tracks/'+id, { headers: { 'Authorization': 'Bearer ' + this.token} })\n      .subscribe((res) => {\n        try{\n          let data = res;\n          this.album = data['album'].name;\n          this.name = data['name'];\n          this.duration = millisToMinutesAndSeconds(data['duration_ms']);\n          this.discNumber = data['disc_number'];\n          this.trackNumber = data['track_number'];\n          this.popularity = data['popularity'];\n        } catch(e){\n          console.error(e);\n        }\n      },() => {\n        console.warn(\"Unable to get\");\n      });\n  }\n}\n\n// Helper for converting milliseconds to readable value\nfunction millisToMinutesAndSeconds(millis) {\n  let minutes = Math.floor(millis / 60000);\n  let seconds = ((millis % 60000) / 1000).toFixed(0);\n  if(parseInt(seconds) < 10){\n    seconds = '0' + seconds.toString();\n  }\n  return minutes + \":\" + seconds;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Dalibor/Desktop/application/source/src/app/dialog/track-dialog/track-dialog.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Dalibor/Desktop/application/source/src/app/dialog/user-dialog/user-dialog.component.css\n// module id = ../../../../../src/app/dialog/user-dialog/user-dialog.component.css\n// module chunks = main","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" style=\\\"width: 100%\\\">\\n  <mat-toolbar style=\\\"background-color: white\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" fxLayout=\\\"column\\\">\\n      <h2>User details</h2>\\n    </div>\\n  </mat-toolbar>\\n\\n  <mat-list fxFlex=\\\"100\\\">\\n    <mat-list-item>\\n      Display name:&nbsp;{{displayName}}\\n    </mat-list-item>\\n    <mat-list-item>\\n      ID:&nbsp;{{id}}\\n    </mat-list-item>\\n    <mat-list-item>\\n      Number of followers:&nbsp;{{numberOfFollowers}}\\n    </mat-list-item>\\n  </mat-list>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Dalibor/Desktop/application/source/src/app/dialog/user-dialog/user-dialog.component.html\n// module id = ../../../../../src/app/dialog/user-dialog/user-dialog.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-user-dialog',\n  templateUrl: './user-dialog.component.html',\n  styleUrls: ['./user-dialog.component.css']\n})\nexport class UserDialogComponent implements OnInit {\n  token: any;\n  displayName: string;\n  numberOfFollowers: string;\n  id: string;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    this.token = this.data['token'];\n    this.displayName = this.data['userData'].displayName;\n    this.numberOfFollowers = this.data['userData'].numberOfFollowers;\n    this.id = this.data['userData'].id;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Dalibor/Desktop/application/source/src/app/dialog/user-dialog/user-dialog.component.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'limitTo'\n})\nexport class TruncatePipe implements PipeTransform {\n\n  transform(value: any, args: string) : string {\n    let limit = args ? parseInt(args, 10) : 10;\n    return value.slice(0,limit);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Dalibor/Desktop/application/source/src/app/pipes/truncate.pipe.ts","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Subject} from 'rxjs/Subject';\n\n@Injectable()\nexport class SearchService {\n  nextAlbums:any;\n  snackBarSubject:Subject<any>;\n  searchedArtists:Subject<any>;\n  selectedArtist:Subject<any>;\n  artistAlbums:Subject<any>;\n  selectedAlbum:Subject<any>;\n  userData:Subject<any>;\n\n  constructor(private http:HttpClient) {\n    this.snackBarSubject = new Subject();\n    this.searchedArtists = new Subject();\n    this.selectedArtist = new Subject();\n    this.artistAlbums = new Subject();\n    this.selectedAlbum = new Subject();\n    this.userData = new Subject();\n  }\n\n  // Get artists from name\n  searchForArtist(token, artist) {\n    this.http.get('https://api.spotify.com/v1/search?q=' + artist + '&type=artist', {headers: {'Authorization': 'Bearer ' + token}})\n      .subscribe((res) => {\n        try {\n          if (!res.hasOwnProperty('artists')) {\n            return;\n          }\n          let artists = res['artists'];\n          if (artists.hasOwnProperty('items') && artists['items'].length > 0) {\n            this.searchedArtists.next(artists);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }, (error) => {\n        this.snackBarSubject.next('Unable to search for artists');\n        console.warn(\"Unable to search for artists\");\n      });\n  };\n\n  // Get artist from artist id\n  openArtist = (token, artist, next) => {\n    this.selectedArtist.next(artist);\n    let url;\n    if (next && this.nextAlbums) {\n      url = this.nextAlbums;\n    } else {\n      url = 'https://api.spotify.com/v1/artists/' + artist.id + '/albums';\n    }\n    this.http.get(url, {headers: {'Authorization': 'Bearer ' + token}})\n      .subscribe((res) => {\n        try {\n          if (!res.hasOwnProperty('next')) {\n            return;\n          }\n          this.nextAlbums = res['next'];\n          if (!res.hasOwnProperty('items')) {\n            return;\n          }\n          this.artistAlbums.next(res['items']);\n        } catch (e) {\n          console.error(e);\n        }\n      }, (error) => {\n        this.snackBarSubject.next('Unable to open artist');\n        console.warn(\"Unable to open artist\");\n      });\n  };\n\n  // Get artist from artist list\n  newArtist(token, id) {\n    let url = 'https://api.spotify.com/v1/artists/' + id;\n    this.http.get(url, {headers: {'Authorization': 'Bearer ' + token}})\n      .subscribe((res) => {\n        try {\n          this.openArtist(token, res, false);\n        } catch (e) {\n          console.error(e);\n        }\n      }, (error) => {\n        this.snackBarSubject.next('Unable to open artist');\n        console.warn(\"Unable to open artist\");\n      });\n  }\n\n  // Open album from id\n  openAlbum(token, album) {\n    let url = 'https://api.spotify.com/v1/albums/' + album.id;\n    this.http.get(url, {headers: {'Authorization': 'Bearer ' + token}})\n      .subscribe((res) => {\n        try {\n          this.selectedAlbum.next(res);\n        } catch (e) {\n          console.error(e);\n        }\n      }, (error) => {\n        this.snackBarSubject.next('Unable to open album');\n        console.warn(\"Unable to open album\");\n      });\n  };\n\n  // Get user details\n  readUserDetails(token) {\n    // Hardcoded for demo\n    const userId = 's33qlm9iqvdx5q94ybekhzrq1';\n    this.http.get('https://api.spotify.com/v1/users/'+userId, {headers: {'Authorization': 'Bearer ' + token}})\n      .subscribe((res) => {\n        try {\n          let data = {};\n          data['displayName'] = res['display_name'];\n          data['numberOfFollowers'] = res['followers'].total;\n          data['id'] = res['id'];\n          this.userData.next(data);\n          this.snackBarSubject.next('Welcome ' + data['displayName']);\n        } catch (e) {\n          console.error(e);\n        }\n      }, (error) => {\n        this.snackBarSubject.next('Unable to read user details');\n        console.warn(\"Unable to read user details\");\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Dalibor/Desktop/application/source/src/app/services/search.service.ts","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\n\n@Injectable()\nexport class SettingsService {\n  savedAlbums:any;\n  visibleAlbums:any;\n  albumsToView:Subject<any>;\n\n  constructor() {\n    this.savedAlbums = [];\n    this.visibleAlbums = [];\n    this.albumsToView = new Subject();\n  }\n\n  // Read albums on load from local storage\n  readSavedAlbums(albumsToStore) {\n    if (localStorage.getItem(\"savedAlbums\")) {\n      this.savedAlbums = JSON.parse(localStorage.getItem(\"savedAlbums\"));\n      this.albumsToView.next(this.savedAlbums);\n    }\n  };\n\n  // Update local storage and recently viewed\n  updateSavedAlbums(albumsToStore, album?) {\n    if (album) {\n      let albumExists = false;\n      if (this.savedAlbums && this.savedAlbums.length > 0) {\n        for (let i = 0; i < this.savedAlbums.length; i++) {\n          if (album.id == this.savedAlbums[i].id) {\n            albumExists = true;\n          }\n        }\n      }\n      if (!albumExists) {\n        this.savedAlbums.unshift(album);\n      }\n    }\n    if (this.savedAlbums.length > albumsToStore) {\n      this.savedAlbums.splice(albumsToStore - this.savedAlbums.length);\n    }\n    this.albumsToView.next(this.savedAlbums);\n    localStorage.setItem('savedAlbums', JSON.stringify(this.savedAlbums));\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Dalibor/Desktop/application/source/src/app/services/settings.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Dalibor/Desktop/application/source/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Dalibor/Desktop/application/source/src/main.ts"],"sourceRoot":"webpack:///"}